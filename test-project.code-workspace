{
    "folders": [
        {
            "path": "."
        }
    ],
    "settings": {
        "stm32-for-vscode.openOCDPath": "openocd",
        "stm32-for-vscode.makePath": "make",
        "stm32-for-vscode.armToolchainPath": "/usr/local/bin",
        "cortex-debug.armToolchainPath": "/usr/local/bin",
        "cortex-debug.openocdPath": "/usr/local/bin/openocd"
    },
    "launch": {
        "configurations": [
            {
                "name": "Cortex debug",
                "type": "cortex-debug",
                "request": "launch",
                "servertype": "openocd",
                "cwd": "${workspaceFolder}",
                "executable": "build/test-project.elf",
                "svdFile": ".vscode/STM32F302x.svd",
                "configFiles": [
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    ".vscode/stm32f3x.cfg"
                ],
                "preLaunchTask": "Build project"
            },
            {
                "name": "Debug current Python file",
                "type": "python",
                "request": "launch",
                "cwd": "${workspaceFolder}",
                "program": "${file}",
                "console": "integratedTerminal"
            },
            {
                "showDevDebugOutput": true,
                "cwd": "${workspaceRoot}",
                "executable": "./build/test-project.elf",
                "name": "Debug STM32",
                "request": "launch",
                "type": "cortex-debug",
                "servertype": "openocd",
                "preLaunchTask": "Build STM",
                "device": "stlink",
                "configFiles": [
                    "interface/stlink.cfg",
                    "target/stm32f3x.cfg"
                ]
            }
        ]
    },
    "tasks": {
        "tasks": [
            {
                "label": "Build project",
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "type": "shell",
                "command": "/usr/bin/make",
                "args": [
                    "GCC_PATH=/usr/local/bin",
                    "-j6"
                ],
                "problemMatcher": {
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                },
                "presentation": {
                    "focus": true
                }
            },
            {
                "label": "Compile current file",
                "type": "shell",
                "command": "/usr/local/bin/arm-none-eabi-gcc",
                "args": [
                    "-c",
                    "-DUSE_HAL_DRIVER",
                    "-DSTM32F302x8",
                    "-ICore/Inc",
                    "-IDrivers/STM32F3xx_HAL_Driver/Inc",
                    "-IDrivers/STM32F3xx_HAL_Driver/Inc/Legacy",
                    "-IDrivers/CMSIS/Device/ST/STM32F3xx/Include",
                    "-IDrivers/CMSIS/Include",
                    "-IDrivers/CMSIS/Include",
                    "-mcpu=cortex-m4",
                    "-mthumb",
                    "-mfpu=fpv4-sp-d16",
                    "-mfloat-abi=hard",
                    "-DUSE_HAL_DRIVER",
                    "-DSTM32F302x8",
                    "-ICore/Inc",
                    "-IDrivers/STM32F3xx_HAL_Driver/Inc",
                    "-IDrivers/STM32F3xx_HAL_Driver/Inc/Legacy",
                    "-IDrivers/CMSIS/Device/ST/STM32F3xx/Include",
                    "-IDrivers/CMSIS/Include",
                    "-IDrivers/CMSIS/Include",
                    "-Og",
                    "-Wall",
                    "-fdata-sections",
                    "-ffunction-sections",
                    "-g",
                    "-gdwarf-2",
                    "-MMD",
                    "-MP",
                    "-MF'build/${fileBasenameNoExtension}.d'",
                    "'${relativeFile}'",
                    "-o",
                    "'build/${fileBasenameNoExtension}.o'"
                ],
                "problemMatcher": {
                    "pattern": {
                        "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                        "file": 1,
                        "line": 2,
                        "column": 3,
                        "severity": 4,
                        "message": 5
                    }
                },
                "presentation": {
                    "focus": true
                }
            },
            {
                "label": "Delete build folder",
                "type": "shell",
                "command": "/usr/bin/make",
                "args": [
                    "clean"
                ],
                "problemMatcher": [],
                "presentation": {
                    "focus": false
                }
            },
            {
                "label": "CPU: Build, Download and run",
                "type": "shell",
                "command": "/usr/local/bin/openocd",
                "args": [
                    "-f",
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    "-f",
                    ".vscode/stm32f3x.cfg",
                    "-c",
                    "program build/test-project.elf verify reset exit"
                ],
                "problemMatcher": [],
                "dependsOn": "Build project"
            },
            {
                "label": "CPU: Download and run",
                "type": "shell",
                "command": "/usr/local/bin/openocd",
                "args": [
                    "-f",
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    "-f",
                    ".vscode/stm32f3x.cfg",
                    "-c",
                    "program build/test-project.elf verify reset exit"
                ],
                "problemMatcher": []
            },
            {
                "label": "CPU: Reset and run",
                "type": "shell",
                "command": "/usr/local/bin/openocd",
                "args": [
                    "-f",
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    "-f",
                    ".vscode/stm32f3x.cfg",
                    "-c init",
                    "-c reset",
                    "-c exit"
                ],
                "problemMatcher": []
            },
            {
                "label": "CPU: Halt",
                "type": "shell",
                "command": "/usr/local/bin/openocd",
                "args": [
                    "-f",
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    "-f",
                    ".vscode/stm32f3x.cfg",
                    "-c init",
                    "-c halt",
                    "-c exit"
                ],
                "problemMatcher": []
            },
            {
                "label": "CPU: Run",
                "type": "shell",
                "command": "/usr/local/bin/openocd",
                "args": [
                    "-f",
                    "/usr/local/Cellar/open-ocd/HEAD-c1f4d9e/share/openocd/scripts/target/stm32f3x.cfg",
                    "-f",
                    ".vscode/stm32f3x.cfg",
                    "-c init",
                    "-c resume",
                    "-c exit"
                ],
                "problemMatcher": []
            },
            {
                "label": "Run Python file",
                "type": "shell",
                "command": "python3",
                "args": [
                    "${file}"
                ],
                "presentation": {
                    "focus": true
                },
                "problemMatcher": []
            },
            {
                "label": "Open CubeMX project",
                "type": "shell",
                "command": "/Applications/STMicroelectronics/STM32CubeMX.app/Contents/MacOs/STM32CubeMX",
                "args": [
                    "test-project.ioc"
                ],
                "presentation": {
                    "focus": false
                },
                "problemMatcher": []
            },
            {
                "label": "Update workspace",
                "type": "shell",
                "command": "python3",
                "args": [
                    "${workspaceFolder}/ideScripts/update.py"
                ],
                "presentation": {
                    "focus": true
                },
                "problemMatcher": []
            },
            {
                "label": "Build STM",
                "type": "process",
                "command": "${command:stm32-for-vscode.build}",
                "options": {
                    "cwd": "${workspaceRoot}"
                },
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "problemMatcher": [
                    "$gcc"
                ]
            },
            {
                "label": "Build Clean STM",
                "type": "process",
                "command": "${command:stm32-for-vscode.cleanBuild}",
                "options": {
                    "cwd": "${workspaceRoot}"
                },
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "problemMatcher": [
                    "$gcc"
                ]
            },
            {
                "label": "Flash STM",
                "type": "process",
                "command": "${command:stm32-for-vscode.flash}",
                "options": {
                    "cwd": "${workspaceRoot}"
                },
                "group": {
                    "kind": "build",
                    "isDefault": true
                },
                "problemMatcher": [
                    "$gcc"
                ]
            }
        ]
    }
}